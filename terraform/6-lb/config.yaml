---
storage:
  files:
    - filesystem: root
      path: /etc/haproxy/haproxy.cfg
      mode: 0600
      owner: root
      contents:
        inline: |
          global
            log stdout local0

          resolvers consul
              nameserver local 127.0.0.1:8600
              accepted_payload_size 8192 # allow larger DNS payloads

          backend mqtt
              balance roundrobin
              server-template mqtt 5 _mqtt._tcp.service.consul check resolvers consul init-addr none
              timeout server 100s
              timeout connect 100s

          backend mqtts
              balance roundrobin
              server-template mqtt 5 _mqtts._tcp.service.consul check resolvers consul init-addr none
              timeout server 100s
              timeout connect 100s

          backend rpc
              balance roundrobin
              server-template mqtt 5 _wasp._rpc.service.consul check resolvers consul init-addr none
              timeout server 100s
              timeout connect 100s

          frontend rpc
              bind :8443 tfo
              default_backend rpc
              timeout client 100s

          frontend mqtt
              bind :1883 tfo
              default_backend mqtt
              timeout client 100s

          frontend mqtts
              bind :8883 tfo
              default_backend mqtts
              timeout client 100s

          frontend stats
              mode            http
              maxconn 10
              bind 0.0.0.0:8404
              stats enable
              acl network_allowed src 192.168.0.0/16 172.16.0.0/12 10.0.0.0/8 127.0.0.0/8
              tcp-request connection reject if !network_allowed
              http-request use-service prometheus-exporter if { path /metrics }
              stats uri /
              stats refresh 5s
              timeout client 100s

    - filesystem: root
      path: /etc/traefik/le.json
      mode: 0600
      owner: root
systemd:
  units:
    - name: "coreos-metadata.service"
      dropins:
        - name: "use-script.conf"
          contents: |
            [Service]
            ExecStart=
            ExecStart=/usr/share/oem/scaleway-coreos-custom-metadata -c COUNT
    - name: traefik.service
      enabled: true
      contents: |
        [Unit]
        Description=Run Traefik LB
        Requires=network-online.target consul-agent.service
        After=consul-agent.service
        [Service]
        Restart=always
        EnvironmentFile=-/run/metadata/coreos
        EnvironmentFile=-/etc/userdata.env
        ExecStop=/usr/bin/docker stop traefik
        ExecStart=/usr/bin/docker run --rm --name traefik --net=host \
          -l "traefik.http.services.dummyService.loadbalancer.server.port=1337" \
          -l "traefik.http.routers.api.rule=Host(`${LB_DASHBOARD_DOMAIN}`)" \
          -l "traefik.http.routers.api.entrypoints=https" \
          -l "traefik.http.routers.api.service=api@internal" \
          -l "traefik.http.routers.api.tls" \
          -l "traefik.http.routers.api.tls.certresolver=le" \
          -l "traefik.http.middlewares.test-ipwhitelist.ipwhitelist.sourcerange=127.0.0.1/32, ${COREOS_CUSTOM_PUBLIC_IPV4}" \
          -l "traefik.enable=true" \
          -v /etc/traefik/le.json:/etc/traefik/le.json \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v /etc/traefik/:/etc/traefik/:ro traefik:v2.2.0 \
              --global.checknewversion="false" \
              --global.sendanonymoususage="false" \
              --accesslog \
              --api \
              --entryPoints.http \
              --entryPoints.http.address=":80" \
              --entryPoints.https \
              --entryPoints.https.address=":443" \
              --providers.consulcatalog.exposedbydefault="false" \
              --log \
              --log.level="info" \
              --certificatesresolvers.le \
              --certificatesresolvers.le.acme.keytype="EC384" \
              --certificatesresolvers.le.acme.storage="/etc/traefik/le.json" \
              --certificatesresolvers.le.acme.tlschallenge \
              --certificatesresolvers.le.acme.email="${LE_EMAIL}" \
              --providers.docker.endpoint=unix:///var/run/docker.sock \
              --providers.docker.exposedByDefault=false
        [Install]
        WantedBy=basic.target
    - name: haproxy.service
      enabled: true
      contents: |
        [Unit]
        Description=HAProxy LB
        Requires=network-online.target consul-agent.service
        After=consul-agent.service
        [Service]
        Restart=always
        EnvironmentFile=-/run/metadata/coreos
        EnvironmentFile=-/etc/userdata.env
        ExecStop=/usr/bin/docker stop traefik
        ExecStart=/usr/bin/docker run --rm --name haproxy --net=host \
          -v /etc/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg \
          haproxy:alpine
        [Install]
        WantedBy=basic.target

