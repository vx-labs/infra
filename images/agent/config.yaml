---
passwd:
  users:
    - name: core
      groups:
        - sudo
        - docker
storage:
  files:
    - filesystem: "root"
      path: "/var/lib/iptables/rules-save"
      mode: 0644
      contents:
        remote:
          url: "https://raw.githubusercontent.com/vx-labs/infra/master/images/agent/iptables.rules"
    - filesystem: "root"
      path: "/opt/scaleway-coreos-custom-metadata"
      mode: 0750
      contents:
        remote:
          url: "https://github.com/jbonachera/scaleway-coreos-custom-metadata/releases/download/v0.0.12/scaleway-coreos-custom-metadata"
    - filesystem: "root"
      path: "/opt/vault-config-extractor"
      mode: 0750
      contents:
        remote:
          url: "https://github.com/vx-labs/vault-config-extractor/releases/download/v0.0.3/vault-config-extractor"
systemd:
  units:
    - name: "iptables-restore.service"
      enable: true
    - name: "coreos-metadata.service"
      dropins:
        - name: "use-script.conf"
          contents: |
            [Service]
            ExecStart=
            ExecStart=/opt/scaleway-coreos-custom-metadata -c COUNT
    - name: "coreos-metadata-sshkeys@.service"
      enabled: true
      dropins:
        - name: "use-script.conf"
          contents: |
            [Service]
            ExecStart=
            ExecStart=/opt/scaleway-coreos-custom-metadata ssh-keys %i
    - name: consul-agent.service
      contents: |
        [Unit]
        Description=Consul agent
        Requires=network-online.target coreos-metadata.service
        After=coreos-metadata.service
        [Service]
        Restart=always
        EnvironmentFile=-/run/metadata/coreos
        ExecStart=/usr/bin/docker run --rm --name consul -v /var/lib/consul:/consul/data --net=host consul agent -bind=${COREOS_CUSTOM_PRIVATE_IPV4} -client=0.0.0.0  -retry-join=servers.consul.discovery.${COREOS_CUSTOM_ZONE_ID}.vx-labs.net
        ExecStop=/usr/bin/docker stop consul
        [Install]
        WantedBy=basic.target
    - name: vault-auth.service
      contents: |
        [Unit]
        Description=Generate vault configuration
        Requires=network-online.target coreos-metadata.service
        After=coreos-metadata.service
        [Service]
        EnvironmentFile=/run/metadata/coreos
        EnvironmentFile=/etc/userdata.env
        ExecStart=/opt/vault-config-extractor --vault-addr-env-var VAULT_ADDR -r VAULT_ROLE_ID -s VAULT_SECRET_ID -o /etc/vault.env
        Type=oneshot
        [Install]
        WantedBy=basic.target
    - name: nomad-agent.service
      enabled: true
      contents: |
        [Unit]
        Description=Run nomad agent
        Requires=network-online.target vault-auth.service coreos-metadata.service consul-agent.service
        After=consul-agent.service vault-auth.service
        [Service]
        EnvironmentFile=/run/metadata/coreos
        EnvironmentFile=/etc/vault.env
        EnvironmentFile=/etc/userdata.env
        ExecStart=/usr/bin/docker  run --rm --privileged --name nomad-agent \
          -e VAULT_TOKEN=${VAULT_TOKEN} \
          -v /tmp:/tmp \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v /var/lib/nomad:/var/lib/nomad \
          --net=host jbonachera/nomad \
            agent -config=/etc/nomad -client \
            -consul-client-auto-join  \
            -consul-auto-advertise \
            -vault-enabled \
            -vault-address=${VAULT_ADDR} \
            -vault-create-from-role=${VAULT_TOKEN_ROLE}
        ExecStop=/usr/bin/docker stop nomad-agent
        [Install]
        WantedBy=basic.target
    - name: linkerd.service
      enabled: true
      contents: |
        [Unit]
        Description=Run linkerd
        Requires=network-online.target coreos-metadata.service
        After=coreos-metadata.service
        [Service]
        Restart=always
        EnvironmentFile=-/run/metadata/coreos
        ExecStart=/usr/bin/docker run --rm --name linkerd --net=host jbonachera/linkerd
        ExecStop=/usr/bin/docker stop linkerd
        [Install]
        WantedBy=basic.target

